# Generated by Django 5.1.6 on 2025-03-19 11:26

import django.db.models.deletion
import src.market.utils
import src.workflow.models
import timescale.db.models.fields
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=120)),
                ('ticker', models.CharField(db_index=True, max_length=20, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('active', models.BooleanField(default=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='CryptoCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('slug', models.SlugField(max_length=100, unique=True)),
                ('rank', models.PositiveIntegerField(default=0, help_text='Order of importance', verbose_name='rank')),
            ],
            options={
                'verbose_name': 'crypto category',
                'verbose_name_plural': 'crypto categories',
                'ordering': ['rank', 'name'],
            },
        ),
        migrations.CreateModel(
            name='CryptoCurency',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=120)),
                ('ticker', models.CharField(db_index=True, max_length=20, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('balance', models.DecimalField(decimal_places=17, max_digits=30)),
                ('pnl', models.DecimalField(decimal_places=17, default=0, max_digits=30)),
                ('active', models.BooleanField(default=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
            ],
            options={
                'abstract': False,
            },
            bases=(models.Model, src.workflow.models.WorkflowMixin),
        ),
        migrations.CreateModel(
            name='Kline',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('symbol', models.CharField(db_index=True, max_length=20)),
                ('interval', models.CharField(default='5m', max_length=10)),
                ('start_time', models.DateTimeField()),
                ('end_time', models.DateTimeField()),
                ('open', models.DecimalField(decimal_places=8, max_digits=20)),
                ('close', models.DecimalField(decimal_places=8, max_digits=20)),
                ('high', models.DecimalField(decimal_places=8, max_digits=20)),
                ('low', models.DecimalField(decimal_places=8, max_digits=20)),
                ('volume', models.DecimalField(decimal_places=8, max_digits=20)),
                ('quote_volume', models.DecimalField(decimal_places=8, default=0.0, max_digits=20)),
                ('taker_buy_base_volume', models.DecimalField(decimal_places=8, default=0.0, max_digits=20)),
                ('taker_buy_quote_volume', models.DecimalField(decimal_places=8, default=0.0, max_digits=20)),
                ('trade_count', models.IntegerField(default=0)),
                ('is_closed', models.BooleanField(default=False)),
                ('time', timescale.db.models.fields.TimescaleDateTimeField(interval='2 week')),
            ],
            options={
                'indexes': [models.Index(fields=['symbol', 'time'], name='market_klin_symbol_670e88_idx')],
                'unique_together': {('symbol', 'start_time', 'interval')},
            },
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_id', models.PositiveIntegerField(blank=True, null=True, verbose_name='object id')),
                ('content', models.CharField(blank=True, max_length=999, null=True, verbose_name='content')),
                ('is_sent', models.BooleanField(default=False, verbose_name='is sent')),
                ('event', models.SmallIntegerField(blank=True, choices=[(1, 'Created'), (2, 'Updated'), (3, 'Deleted'), (4, 'Trade Executed'), (5, 'Error Occurred')], null=True, verbose_name='event')),
                ('commit_time', models.DateTimeField(auto_now_add=True, verbose_name='commit time')),
                ('send_time', models.DateTimeField(blank=True, null=True, verbose_name='send time')),
                ('exception_id', models.CharField(blank=True, max_length=255, null=True, verbose_name='exception id')),
                ('content_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype', verbose_name='content type')),
            ],
            options={
                'verbose_name': 'notification',
                'verbose_name_plural': 'notifications',
                'ordering': ['-commit_time'],
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ticker', models.CharField(max_length=10)),
                ('order_type', models.CharField(choices=[('BUY', 'Buy'), ('SELL', 'Sell')], max_length=4)),
                ('quantity', models.DecimalField(decimal_places=8, max_digits=30)),
                ('price', models.DecimalField(decimal_places=8, max_digits=30)),
                ('value', models.DecimalField(decimal_places=4, max_digits=30)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('crypto', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='orders', to='market.cryptocurency')),
            ],
            options={
                'abstract': False,
            },
            bases=(models.Model, src.workflow.models.WorkflowMixin),
        ),
        migrations.CreateModel(
            name='Symbol',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('coin', models.CharField(blank=True, max_length=100, null=True, unique=True)),
                ('ticker', models.CharField(db_index=True, max_length=50, unique=True)),
                ('rank', models.PositiveIntegerField(blank=True, null=True, unique=True)),
                ('pair', models.CharField(db_index=True, max_length=50, unique=True)),
                ('price', models.DecimalField(decimal_places=17, default=0.0, max_digits=30)),
                ('change_24h', models.CharField(blank=True, max_length=50)),
                ('market_cap', models.CharField(blank=True, max_length=50)),
                ('volume_24h', models.CharField(blank=True, max_length=50)),
                ('circ_supply', models.DecimalField(decimal_places=17, default=0.0, max_digits=30)),
                ('precision', models.IntegerField(default=8)),
                ('active', models.BooleanField(default=True)),
                ('enabled', models.BooleanField(default=True)),
                ('logo', models.ImageField(blank=True, default='coins/XTVCUSDT.svg', null=True, upload_to=src.market.utils.upload_image_file_path)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('categories', models.ManyToManyField(blank=True, to='market.cryptocategory')),
            ],
            options={
                'ordering': ('rank', '-active', 'ticker'),
            },
        ),
    ]
